- name: Install packages
  apt: name={{item}} state=present
  with_items:
    - lvm2
    - rng-tools
    - libvirt-bin
    - qemu-kvm
    - libguestfs-tools
    - python-libvirt
    - python-lxml

- name: Set up volume group
  lvg:
    state: present
    vg: "{{ libvirt_vg_name }}"
    pvs: "{{ libvirt_vg_pvs }}"

- name: Define storage pool
  virt_pool:
    name: "{{ libvirt_pool_name }}"
    autostart: yes
    state: present
    xml: "{{ lookup('template', 'pool.xml.j2')  }}"

- name: Start storage pool
  virt_pool:
    name: "{{ libvirt_pool_name }}"
    autostart: yes
    state: active

- include: tasks/fix-libguestfs.yml

- include: tasks/list.yml

- name: Delete domains that are obsolete
  include: tasks/delete_domain.yml
  static: no
  with_items: "{{ libvirt_domains_deleted }}"
  loop_control:
    loop_var: libvirt_domain_delete
  when: libvirt_domain_delete in libvirt_all_domains

- include: tasks/list.yml
  when: libvirt_all_domains | intersect(libvirt_domains_deleted)

- name: Setup domains that are missing
  include: tasks/setup_domain.yml libvirt_domain={{libvirt_domain_defaults|combine(domain_definition)}}
  static: no
  with_items: "{{ libvirt_domains }}"
  loop_control:
    loop_var: domain_definition
  when: domain_definition.name not in libvirt_all_domains

- name: "Start domain"
  vars:
    libvirt_domain: "{{libvirt_domain_defaults|combine(domain_definition)}}"
  virt:
    name: "{{libvirt_domain.name}}"
    state: running
    autostart: "{{libvirt_domain.autostart}}"
  with_items: "{{ libvirt_domains }}"
  loop_control:
    loop_var: domain_definition
  when: libvirt_domain.autostart

- name: "Wait for domain to come up"
  wait_for:
    host: "{{item.ip}}"
    port: 22
  with_items: "{{libvirt_domains}}"
  when: (libvirt_domain_defaults|combine(item)).autostart

- name: Register hosts in the inventory
  add_host:
    name: "{{item.name}}"
    groups: 
      - virtual_machines
      - "virtual_machines-{{ inventory_hostname }}"
    ansible_host: "{{item.ip}}"
    ansible_ssh_common_args: '-o ProxyCommand="ssh -W %h:%p -q {{ ansible_outgoing_user }}@{{inventory_hostname}}"'
    ## Explicitly inherit these values
    pass_prefix: "{{pass_prefix}}{{pass_name}}/"
    pass_generate_length: "{{pass_generate_length}}"
  with_items: "{{libvirt_domains}}"
  changed_when: false


# - name: Get libvirt network facts
#   virt_net: command=facts

## Network (re)definition is basically broken with the virt_net module
## Ignore it for now.  TODO
## User must set up network before use
#
# - name: Define network
#   virt_net:
#     name: "{{libvirt_net_name}}"
#     autostart: yes
#     state: present
#     xml: "{{ lookup('template', 'net.xml.j2')  }}"
